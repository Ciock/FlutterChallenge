// Mocks generated by Mockito 5.4.3 from annotations
// in deliveristo_interview/test/store/breed_test.service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:deliveristo_interview/store/breed/breed.api.dart' as _i3;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BreedApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedApi extends _i1.Mock implements _i3.BreedApi {
  MockBreedApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> tryGetBreeds() => (super.noSuchMethod(
        Invocation.method(
          #tryGetBreeds,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #tryGetBreeds,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> tryGetBreedImage(String? breedId) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryGetBreedImage,
          [breedId],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #tryGetBreedImage,
            [breedId],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> tryGetBreedImages(String? breedId) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryGetBreedImages,
          [breedId],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #tryGetBreedImages,
            [breedId],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> tryGetSubBreedImage(
    String? subBreedId,
    String? breedId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryGetSubBreedImage,
          [
            subBreedId,
            breedId,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #tryGetSubBreedImage,
            [
              subBreedId,
              breedId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> tryGetSubBreedImages(
    String? subBreedId,
    String? breedId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryGetSubBreedImages,
          [
            subBreedId,
            breedId,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #tryGetSubBreedImages,
            [
              subBreedId,
              breedId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}
